<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="74543066-4380-4ebc-a879-d71d4a1c0374" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/dist/src/auth/auth.service.js" beforeDir="false" afterPath="$PROJECT_DIR$/dist/src/auth/auth.service.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/dist/src/auth/auth.service.js.map" beforeDir="false" afterPath="$PROJECT_DIR$/dist/src/auth/auth.service.js.map" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/dist/src/common/exception/register.http-exceptoin.filter.js" beforeDir="false" afterPath="$PROJECT_DIR$/dist/src/common/exception/register.http-exceptoin.filter.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/dist/src/common/exception/register.http-exceptoin.filter.js.map" beforeDir="false" afterPath="$PROJECT_DIR$/dist/src/common/exception/register.http-exceptoin.filter.js.map" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/dist/src/common/interceptors/register.success.interceptor.js" beforeDir="false" afterPath="$PROJECT_DIR$/dist/src/common/interceptors/register.success.interceptor.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/dist/src/common/interceptors/register.success.interceptor.js.map" beforeDir="false" afterPath="$PROJECT_DIR$/dist/src/common/interceptors/register.success.interceptor.js.map" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/dist/src/restaurants/restaurants.service.js" beforeDir="false" afterPath="$PROJECT_DIR$/dist/src/restaurants/restaurants.service.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/dist/src/restaurants/restaurants.service.js.map" beforeDir="false" afterPath="$PROJECT_DIR$/dist/src/restaurants/restaurants.service.js.map" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/dist/src/review/review.service.js" beforeDir="false" afterPath="$PROJECT_DIR$/dist/src/review/review.service.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/dist/src/review/review.service.js.map" beforeDir="false" afterPath="$PROJECT_DIR$/dist/src/review/review.service.js.map" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/dist/src/users/users.controller.d.ts" beforeDir="false" afterPath="$PROJECT_DIR$/dist/src/users/users.controller.d.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/dist/src/users/users.service.d.ts" beforeDir="false" afterPath="$PROJECT_DIR$/dist/src/users/users.service.d.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/dist/src/users/users.service.js" beforeDir="false" afterPath="$PROJECT_DIR$/dist/src/users/users.service.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/dist/src/users/users.service.js.map" beforeDir="false" afterPath="$PROJECT_DIR$/dist/src/users/users.service.js.map" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/dist/tsconfig.build.tsbuildinfo" beforeDir="false" afterPath="$PROJECT_DIR$/dist/tsconfig.build.tsbuildinfo" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/auth/auth.service.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/auth/auth.service.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/common/exception/register.http-exceptoin.filter.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/common/exception/register.http-exceptoin.filter.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/common/interceptors/register.success.interceptor.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/common/interceptors/register.success.interceptor.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/restaurants/restaurants.service.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/restaurants/restaurants.service.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/review/review.service.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/review/review.service.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/users/users.service.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/users/users.service.ts" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectId" id="2Lx5Urn1yzfhC88jyULLwcIsJKa" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;RunOnceActivity.OpenDatabaseViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;C:/Githubs/projects/immersion_server&quot;
  },
  &quot;keyToStringList&quot;: {
    &quot;DatabaseDriversLRU&quot;: [
      &quot;mysql&quot;
    ]
  }
}</component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
</project>